/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package bowler.launcher;

option java_multiple_files = true;
option java_package = "com.commonwealthrobotics.proto.launcher";

// Next: 2
// The request message for a service configuration RPC
message ConfigureServiceRequest {
    // True if the kernel service should be enabled on startup
    bool serviceEnabledOnStartup = 1;
}

// Next: 1
// The response message for a service configuration RPC
message ConfigureServiceResponse {}

// Next: 2
// A part of a file being transferred
message FileFragment {
    bytes data = 1;
}

// Next: 3
// The response message for a new kernel transfer RPC
message TransferNewKernelResponse {
    // The hash of the received file
    bytes sha3_224 = 1;
    // The path to the received file
    string path = 2;
}

// Next: 2
// The request message for a kernel update RPC
message UpdateKernelRequest {
    // The path to the new kernel file
    string path = 1;
}

// Next: 1
// The response message for a kernel update RPC
message UpdateKernelResponse {}

// The kernel launcher service
service Launcher {
    // Configures the kernel service
    rpc ConfigureService(ConfigureServiceRequest) returns (ConfigureServiceResponse);

    // Transfers a new kernel file
    rpc TransferNewKernel(stream FileFragment) returns (TransferNewKernelResponse);

    // Updates the kernel
    rpc UpdateKernel(UpdateKernelRequest) returns (UpdateKernelResponse);
}

